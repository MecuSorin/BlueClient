/*
 * angular-ui-bootstrap
 * http://angular-ui.github.io/bootstrap/

 * Version: 0.12.1 - 2015-02-20
 * License: MIT
 */
angular.module("ui.bootstrap",["ui.bootstrap.tpls","ui.bootstrap.timepicker","ui.bootstrap.buttons"]),angular.module("ui.bootstrap.tpls",["template/timepicker/timepicker.html"]),angular.module("ui.bootstrap.timepicker",[]).constant("timepickerConfig",{hourStep:1,minuteStep:1,showMeridian:!0,meridians:null,readonlyInput:!1,mousewheel:!0}).controller("TimepickerController",["$scope","$attrs","$parse","$log","$locale","timepickerConfig",function(e,n,t,i,r,a){function o(){var n=parseInt(e.hours,10),t=e.showMeridian?n>0&&13>n:n>=0&&24>n;return t?(e.showMeridian&&(12===n&&(n=0),e.meridian===f[1]&&(n+=12)),n):void 0}function u(){var n=parseInt(e.minutes,10);return n>=0&&60>n?n:void 0}function l(e){return angular.isDefined(e)&&e.toString().length<2?"0"+e:e}function s(e){c(),g.$setViewValue(new Date(m)),d(e)}function c(){g.$setValidity("time",!0),e.invalidHours=!1,e.invalidMinutes=!1}function d(n){var t=m.getHours(),i=m.getMinutes();e.showMeridian&&(t=0===t||12===t?12:t%12),e.hours="h"===n?t:l(t),e.minutes="m"===n?i:l(i),e.meridian=m.getHours()<12?f[0]:f[1]}function p(e){var n=new Date(m.getTime()+6e4*e);m.setHours(n.getHours(),n.getMinutes()),s()}var m=new Date,g={$setViewValue:angular.noop},f=angular.isDefined(n.meridians)?e.$parent.$eval(n.meridians):a.meridians||r.DATETIME_FORMATS.AMPMS;this.init=function(t,i){g=t,g.$render=this.render;var r=i.eq(0),o=i.eq(1),u=angular.isDefined(n.mousewheel)?e.$parent.$eval(n.mousewheel):a.mousewheel;u&&this.setupMousewheelEvents(r,o),e.readonlyInput=angular.isDefined(n.readonlyInput)?e.$parent.$eval(n.readonlyInput):a.readonlyInput,this.setupInputEvents(r,o)};var h=a.hourStep;n.hourStep&&e.$parent.$watch(t(n.hourStep),function(e){h=parseInt(e,10)});var v=a.minuteStep;n.minuteStep&&e.$parent.$watch(t(n.minuteStep),function(e){v=parseInt(e,10)}),e.showMeridian=a.showMeridian,n.showMeridian&&e.$parent.$watch(t(n.showMeridian),function(n){if(e.showMeridian=!!n,g.$error.time){var t=o(),i=u();angular.isDefined(t)&&angular.isDefined(i)&&(m.setHours(t),s())}else d()}),this.setupMousewheelEvents=function(n,t){var i=function(e){e.originalEvent&&(e=e.originalEvent);var n=e.wheelDelta?e.wheelDelta:-e.deltaY;return e.detail||n>0};n.bind("mousewheel wheel",function(n){e.$apply(i(n)?e.incrementHours():e.decrementHours()),n.preventDefault()}),t.bind("mousewheel wheel",function(n){e.$apply(i(n)?e.incrementMinutes():e.decrementMinutes()),n.preventDefault()})},this.setupInputEvents=function(n,t){if(e.readonlyInput)return e.updateHours=angular.noop,void(e.updateMinutes=angular.noop);var i=function(n,t){g.$setViewValue(null),g.$setValidity("time",!1),angular.isDefined(n)&&(e.invalidHours=n),angular.isDefined(t)&&(e.invalidMinutes=t)};e.updateHours=function(){var e=o();angular.isDefined(e)?(m.setHours(e),s("h")):i(!0)},n.bind("blur",function(){!e.invalidHours&&e.hours<10&&e.$apply(function(){e.hours=l(e.hours)})}),e.updateMinutes=function(){var e=u();angular.isDefined(e)?(m.setMinutes(e),s("m")):i(void 0,!0)},t.bind("blur",function(){!e.invalidMinutes&&e.minutes<10&&e.$apply(function(){e.minutes=l(e.minutes)})})},this.render=function(){var e=g.$modelValue?new Date(g.$modelValue):null;isNaN(e)?(g.$setValidity("time",!1),i.error('Timepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.')):(e&&(m=e),c(),d())},e.incrementHours=function(){p(60*h)},e.decrementHours=function(){p(60*-h)},e.incrementMinutes=function(){p(v)},e.decrementMinutes=function(){p(-v)},e.toggleMeridian=function(){p(720*(m.getHours()<12?1:-1))}}]).directive("timepicker",function(){return{restrict:"EA",require:["timepicker","?^ngModel"],controller:"TimepickerController",replace:!0,scope:{},templateUrl:"template/timepicker/timepicker.html",link:function(e,n,t,i){var r=i[0],a=i[1];a&&r.init(a,n.find("input"))}}}),angular.module("ui.bootstrap.buttons",[]).constant("buttonConfig",{activeClass:"active",toggleEvent:"click"}).controller("ButtonsController",["buttonConfig",function(e){this.activeClass=e.activeClass||"active",this.toggleEvent=e.toggleEvent||"click"}]).directive("btnRadio",function(){return{require:["btnRadio","ngModel"],controller:"ButtonsController",link:function(e,n,t,i){var r=i[0],a=i[1];a.$render=function(){n.toggleClass(r.activeClass,angular.equals(a.$modelValue,e.$eval(t.btnRadio)))},n.bind(r.toggleEvent,function(){var i=n.hasClass(r.activeClass);(!i||angular.isDefined(t.uncheckable))&&e.$apply(function(){a.$setViewValue(i?null:e.$eval(t.btnRadio)),a.$render()})})}}}).directive("btnCheckbox",function(){return{require:["btnCheckbox","ngModel"],controller:"ButtonsController",link:function(e,n,t,i){function r(){return o(t.btnCheckboxTrue,!0)}function a(){return o(t.btnCheckboxFalse,!1)}function o(n,t){var i=e.$eval(n);return angular.isDefined(i)?i:t}var u=i[0],l=i[1];l.$render=function(){n.toggleClass(u.activeClass,angular.equals(l.$modelValue,r()))},n.bind(u.toggleEvent,function(){e.$apply(function(){l.$setViewValue(n.hasClass(u.activeClass)?a():r()),l.$render()})})}}}),angular.module("template/timepicker/timepicker.html",[]).run(["$templateCache",function(e){e.put("template/timepicker/timepicker.html",'<table>\n	<tbody>\n		<tr class="text-center">\n			<td><a ng-click="incrementHours()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n			<td>&nbsp;</td>\n			<td><a ng-click="incrementMinutes()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n			<td ng-show="showMeridian"></td>\n		</tr>\n		<tr>\n			<td style="width:50px;" class="form-group" ng-class="{\'has-error\': invalidHours}">\n				<input type="text" ng-model="hours" ng-change="updateHours()" class="form-control text-center" ng-mousewheel="incrementHours()" ng-readonly="readonlyInput" maxlength="2">\n			</td>\n			<td>:</td>\n			<td style="width:50px;" class="form-group" ng-class="{\'has-error\': invalidMinutes}">\n				<input type="text" ng-model="minutes" ng-change="updateMinutes()" class="form-control text-center" ng-readonly="readonlyInput" maxlength="2">\n			</td>\n			<td ng-show="showMeridian"><button type="button" class="btn btn-default text-center" ng-click="toggleMeridian()">{{meridian}}</button></td>\n		</tr>\n		<tr class="text-center">\n			<td><a ng-click="decrementHours()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n			<td>&nbsp;</td>\n			<td><a ng-click="decrementMinutes()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n			<td ng-show="showMeridian"></td>\n		</tr>\n	</tbody>\n</table>\n')}]);